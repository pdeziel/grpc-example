syntax = "proto3";

package hello;

option go_package = "github.com/pdeziel/grpc-example/pb";

// Define what endpoints are available in the service
service Hello {
    // Unary RPC - one request and one response
    rpc SayHello (HelloRequest) returns (HelloReply) {}

    // Server side streaming RPC - one request and a stream of responses
    rpc SayServerStream (HelloManyRequest) returns (stream HelloReply) {}

    // Client side streaming RPC - a stream of requests and one response
    rpc SayClientStream (stream HelloRequest) returns (HelloManyReply) {}

    // Bidirectional streaming RPC - a stream of requests and a stream of responses
    rpc SayBidirectional (stream HelloRequest) returns (stream HelloReply) {}
}

// A message sent from the client to the server
message HelloRequest {
    string iso_language_code = 1;
}

// A message sent from the server to the client
// For backwards compatibility, don't change the numbering of the fields
message HelloReply {
    string greeting = 1;
    string iso_language_code = 2;
    uint64 id = 3;

    // Fields 4-15 are reserved for future use

    // Message timestamps
    string created_at = 16;
}

// Using the repeated keyword allows for "lists" of messages
message HelloManyRequest {
    repeated string iso_language_codes = 1;
}

message HelloManyReply {
    repeated HelloReply greetings = 1;
}